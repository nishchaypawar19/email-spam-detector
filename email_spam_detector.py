# -*- coding: utf-8 -*-
"""email spam detector

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nT0bOW-0GQ4HrOIFSfwk3wbIcNUmcvzX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report, accuracy_score

# Step 1: Load dataset
# -----------------------------
df = pd.read_csv("spam_ham_dataset.csv")

# Use 'text' as features and 'label_num' as target
X = df['text']
y = df['label_num']  # 0 = ham, 1 = spam

# -----------------------------
# Step 2: Train-test split
# -----------------------------
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# -----------------------------
# Step 3: Feature extraction
# -----------------------------
vectorizer = TfidfVectorizer(stop_words='english', max_features=5000)
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# -----------------------------
# Step 4: Model Training
# -----------------------------
model = MultinomialNB()
model.fit(X_train_vec, y_train)

# -----------------------------
# Step 5: Evaluation
# -----------------------------
y_pred = model.predict(X_test_vec)
print("Accuracy:", accuracy_score(y_test, y_pred)*100)
print("\nClassification Report:\n", classification_report(y_test, y_pred, target_names=["Ham","Spam"]))

# -----------------------------
# Step 6: Prediction Function
# -----------------------------
def predict_message(msg):
    vec = vectorizer.transform([msg])
    pred = model.predict(vec)[0]
    return "Spam" if pred == 1 else "Ham (Not Spam)"

# Example usage
print(predict_message("You won a $1000 gift card! Click here."))
print(predict_message("Let's have lunch tomorrow."))

print(predict_message("Congratulations! You have won free tickets."))
print(predict_message("Hey, are we still meeting at 6 PM?"))

new_messages = [
    "Get cheap loans instantly. Apply now!",
    "Don't forget to submit the report tomorrow.",
    "You won a free iPhone! Claim now.",
]

for msg in new_messages:
    print(msg, "->", predict_message(msg))

print(predict_message('you got a first postition in your shcool'))

